{"ast":null,"code":"var _jsxFileName = \"/media/pedro/Arquivos-Ubuntu2/Projetos/Front/desafioAltas/src/pages/SearchProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchProfile(_ref) {\n  _s();\n\n  let {\n    setUrlProfile,\n    urlProfile\n  } = _ref;\n  const [input, setInput] = useState('');\n  const [emptyInput, setEmptyInput] = useState(false);\n  const [invalidUser, setInvalidUser] = useState(false);\n  const navigate = useNavigate();\n\n  const getProfile = async () => {\n    try {\n      const promise = await axios.get(`https://api.github.com/users/${input}`);\n      setUrlProfile(`https://api.github.com/users/${input}`);\n      console.log(urlProfile);\n      navigate('/profile');\n    } catch (error) {\n      setInvalidUser(true);\n    }\n  };\n\n  const verifyImput = () => {\n    if (input === '') {\n      return setEmptyInput(false);\n    }\n\n    return getProfile();\n  };\n\n  const onChangeButton = e => {\n    setEmptyInput(false);\n    setInvalidUser(false);\n    setInput(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Buscar Reposit\\xF3rio no github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputProfile\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"inputProfile\",\n          placeholder: \"Digite o nome do usu\\xE1rio\",\n          onChange: onChangeButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: verifyImput,\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), emptyInput && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"informe um nome de usu\\xE1rio v\\xE1lido do github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this), invalidUser && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Usu\\xE1rio n\\xE3o encontrado no github. Verifique se voc\\xEA digitou o nome corretamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchProfile, \"f8vlpctW7NmdqeG9CbqDTGLhZLY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchProfile;\nexport default SearchProfile;\nSearchProfile.propTypes = {\n  urlProfile: PropTypes.string.isRequired,\n  setUrlProfile: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchProfile\");","map":{"version":3,"names":["axios","React","useState","PropTypes","useNavigate","SearchProfile","setUrlProfile","urlProfile","input","setInput","emptyInput","setEmptyInput","invalidUser","setInvalidUser","navigate","getProfile","promise","get","console","log","error","verifyImput","onChangeButton","e","target","value","propTypes","string","isRequired","func"],"sources":["/media/pedro/Arquivos-Ubuntu2/Projetos/Front/desafioAltas/src/pages/SearchProfile.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nfunction SearchProfile({ setUrlProfile, urlProfile }) {\n  const [input, setInput] = useState('');\n  const [emptyInput, setEmptyInput] = useState(false);\n  const [invalidUser, setInvalidUser] = useState(false);\n  const navigate = useNavigate();\n\n  const getProfile = async () => {\n    try {\n      const promise = await axios.get(`https://api.github.com/users/${input}`);\n      setUrlProfile(`https://api.github.com/users/${input}`);\n\n      console.log(urlProfile);\n      navigate('/profile');\n    } catch (error) {\n      setInvalidUser(true);\n    }\n  };\n\n  const verifyImput = () => {\n    if (input === '') {\n      return setEmptyInput(false);\n    }\n    return getProfile();\n  };\n\n  const onChangeButton = (e) => {\n    setEmptyInput(false);\n    setInvalidUser(false);\n    setInput(e.target.value);\n  };\n\n  return (\n    <main>\n      <h1>Buscar Repositório no github</h1>\n      <nav>\n        <label htmlFor=\"inputProfile\">\n          <input\n            id=\"inputProfile\"\n            placeholder=\"Digite o nome do usuário\"\n            onChange={onChangeButton}\n          />\n        </label>\n        <button\n          type=\"button\"\n          onClick={verifyImput}\n        >\n          Pesquisar\n        </button>\n        {emptyInput && <h1>informe um nome de usuário válido do github</h1>}\n        {invalidUser\n          && (\n          <h1>\n            Usuário não encontrado no github. Verifique se você digitou o nome corretamente\n          </h1>\n          )}\n      </nav>\n    </main>\n  );\n}\n\nexport default SearchProfile;\n\nSearchProfile.propTypes = {\n  urlProfile: PropTypes.string.isRequired,\n  setUrlProfile: PropTypes.func.isRequired,\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,aAAT,OAAsD;EAAA;;EAAA,IAA/B;IAAEC,aAAF;IAAiBC;EAAjB,CAA+B;EACpD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAMY,QAAQ,GAAGV,WAAW,EAA5B;;EAEA,MAAMW,UAAU,GAAG,YAAY;IAC7B,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,gCAA+BT,KAAM,EAAhD,CAAtB;MACAF,aAAa,CAAE,gCAA+BE,KAAM,EAAvC,CAAb;MAEAU,OAAO,CAACC,GAAR,CAAYZ,UAAZ;MACAO,QAAQ,CAAC,UAAD,CAAR;IACD,CAND,CAME,OAAOM,KAAP,EAAc;MACdP,cAAc,CAAC,IAAD,CAAd;IACD;EACF,CAVD;;EAYA,MAAMQ,WAAW,GAAG,MAAM;IACxB,IAAIb,KAAK,KAAK,EAAd,EAAkB;MAChB,OAAOG,aAAa,CAAC,KAAD,CAApB;IACD;;IACD,OAAOI,UAAU,EAAjB;EACD,CALD;;EAOA,MAAMO,cAAc,GAAIC,CAAD,IAAO;IAC5BZ,aAAa,CAAC,KAAD,CAAb;IACAE,cAAc,CAAC,KAAD,CAAd;IACAJ,QAAQ,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;EACD,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACE;QAAO,OAAO,EAAC,cAAf;QAAA,uBACE;UACE,EAAE,EAAC,cADL;UAEE,WAAW,EAAC,6BAFd;UAGE,QAAQ,EAAEH;QAHZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QACE,IAAI,EAAC,QADP;QAEE,OAAO,EAAED,WAFX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF,EAcGX,UAAU,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdjB,EAeGE,WAAW,iBAEV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;GA1DQP,a;UAIUD,W;;;KAJVC,a;AA4DT,eAAeA,aAAf;AAEAA,aAAa,CAACqB,SAAd,GAA0B;EACxBnB,UAAU,EAAEJ,SAAS,CAACwB,MAAV,CAAiBC,UADL;EAExBtB,aAAa,EAAEH,SAAS,CAAC0B,IAAV,CAAeD;AAFN,CAA1B"},"metadata":{},"sourceType":"module"}